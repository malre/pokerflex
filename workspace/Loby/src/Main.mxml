<?xml version="1.0" encoding="utf-8"?>
<s:Application 
        xmlns:fx="http://ns.adobe.com/mxml/2009" 
        xmlns:d="http://ns.adobe.com/fxg/2008/dt"
        xmlns:s="library://ns.adobe.com/flex/spark" 
        xmlns:th="http://ns.adobe.com/thermo/2009" 
        xmlns:mx="library://ns.adobe.com/flex/halo" 
        xmlns:message="message.*"
        xmlns:components="components.*"
		xmlns:poker="poker.*"
        width="780" height="560" backgroundColor="#ffffff" 
        creationComplete="createcomplete(event)" enterFrame="enterframe(event)" 
		preloader="GameLoadingbar">
	<fx:Script>
		<![CDATA[
			import lobystate.StateGetPlayerInfo;
			
			import mx.controls.Image;
			import mx.controls.Label;
			import mx.events.FlexEvent;
			
			import spark.components.Group;
			import spark.utils.TextFlowUtil;
			
			// 玩家最近一次所在游戏桌编号
			public var tableId:int;

			protected function createcomplete(event:Event):void
			{
//				// 修改tooltip的式样
//				StyleManager.getStyleDeclaration("ToolTip").setStyle("fontSize",18);   
////				StyleManager.getStyleDeclaration("ToolTip").setStyle("backgroundColor","#33CC99");  
				
				// 大厅置成正常状态
				LobyManager.Instance.state = 0;
				// 发送更新大厅列表
				LobyNetManager.Instance.send(LobyNetManager.roomInfo);
				
				// 开始播放背景音乐
//				SoundManager.Instance().seturl(SoundManager.Instance().mp3url);
//				SoundManager.Instance().play();
			}
			
			protected function enterframe(event:Event):void
			{
				LobyManager.Instance.enterFrame();
			}


			public function tolobby_clickHandler(event:MouseEvent):void
			{
				if(!LobyManager.Instance.windowMutex){
					if(StateGetPlayerInfo.Instance.lastFlag)
					{
						currentState = "lobby";
						roomScroller.visible = false;
						functionpanel.currentState = "State2";
//						btn2lobby.visible = false;
						lobbyroomtag.visible = false;
						
//						btn2room.visible = true;
						introduceText.visible = true;
						lobbypanel.currentState='State1';
						gameTreeView.visible = true;
					}
				}
			}


			public function toroom_clickHandler(event:MouseEvent):void
			{
				if(!LobyManager.Instance.windowMutex){
					if(StateGetPlayerInfo.Instance.lastFlag)
					{
						currentState = "room";
						roomScroller.visible = true;
						functionpanel.currentState = "State3";
//						btn2lobby.visible = true;
						lobbyroomtag.visible = true;
						
//						btn2room.visible = false;
						introduceText.visible = false;
						lobbypanel.currentState= 'State2';
						gameTreeView.visible = false;
					}
				}
			}

			// 该按钮会导致进入房间的请求，会产生互斥
			protected function btn2LastTable_clickHandler(event:MouseEvent):void
			{
				if(!LobyManager.Instance.windowMutex){
					if(StateGetPlayerInfo.Instance.lastFlag)
					{
						LobyNetManager.Instance.send(LobyNetManager.joinTable, StateGetPlayerInfo.Instance.lastRoomId.toString(), "toLast");
					}
				}
			}
			
			// 构建大厅中初始的15张桌子
			// 如果桌子的数量发生变化，在这里进行维护和修改，所有的桌子采用group的方式
			protected function gameRoomCanvas_creationCompleteHandler(event:FlexEvent):void
			{
				const tableStartX:int = 45;
				const tableStartY:int = 55;
				const intervalX:int = 100;
				const intervalY:int = 80;
				const roomTableMax:int = 15;
				const roomTableRowMax:int = 7;
				const roomTableColumnMax:int = 3;
				const tableAvatarSize:int = 29;

				for(var i:int =0; i<roomTableRowMax; i++)
				{
					for(var j:int =0; j<roomTableColumnMax; j++)
					{
						// 如果超出了界限，直接返回
						if(i*roomTableColumnMax+j >= roomTableMax)
							return;
						
						var id:int = i*roomTableColumnMax +j;

						// 所有的桌子的元素都将会被加到这个ui中去，加入顺序是
						// 0: 0号位椅子
						// 1: 桌子
						// 2: 1号位椅子
						// 3: 2号位椅子
						// 4: 3号位椅子
						// 5: 左上桌子的名字
						// 6: 0号位玩家头像，名字
						// 7: 1号位玩家头像，名字
						// 8: 2号位玩家头像，名字
						// 9: 3号位玩家头像，名字
						var group:Group = new Group();
						group.id = "grouptable_"+(0+1).toString();
						group.x = tableStartX + (intervalX+51)*j;
						group.y = tableStartY + (intervalY+52)*i;
						group.visible = false;
						gameRoomCanvas.addElement(group);
					
						// 桌子的图
						var img:Image = new Image();
						img.x = 0;
						img.y = 0;
						img.id = "grouptable_"+(id+1).toString();
						img.load(ResourceManager.imgTable);
						{
							// 为了达到一个重叠的效果，把上面的椅子在桌子之前描画
							group.addElementAt(LobyManager.Instance.createTableBtn(id.toString(), "up"+id.toString(), img.x+12, img.y-28, 0), 0);
						}
						group.addElementAt(img, 1);
					
						// 创建按钮
						group.addElementAt(LobyManager.Instance.createTableBtn(id.toString(), "left"+id.toString(), img.x-40, img.y+16, 1), 2);
						group.addElementAt(LobyManager.Instance.createTableBtn(id.toString(), "down"+id.toString(), img.x+12, img.y+40, 2), 3);
						group.addElementAt(LobyManager.Instance.createTableBtn(id.toString(), "right"+id.toString(), img.x+52+15, img.y+16, 3), 4);

						// 桌子上的桌号
						var tableName:Label = new Label();
						tableName.x = img.x -38;
						tableName.y = img.y - 44 ;
						// 为了保证换行以后的文字能够都显示出来
						tableName.width = 50;
						tableName.height = 45;
						tableName.text = (id+1).toString();//String(obj[id].name).replace("台", "台\n");;//(id+1).toString();
						//						label.setStyle("fontSize", 14);
						//						label.setStyle("color","#ffcc33"); 
						group.addElementAt(tableName, 5);
						// 创建桌子上的头像图和文字信息
						// 0: 头像
						// 1: 文字信息
						group.addElementAt(LobyManager.Instance.createAvatarAndName("up"+id.toString(), img.x+17, img.y-40), 6);
						group.addElementAt(LobyManager.Instance.createAvatarAndName("left"+id.toString(), img.x-33, img.y+6), 7);
						group.addElementAt(LobyManager.Instance.createAvatarAndName("down"+id.toString(), img.x+17, img.y+30), 8);
						group.addElementAt(LobyManager.Instance.createAvatarAndName("right"+id.toString(), img.x+51+21, img.y+6), 9);
					}			
				}
			}


			// 关闭所有的窗口
			public function closeAllWnd():void
			{
				shopmenu.CloseButton();
				playerinfo.Button_click();
				createTable.closeOption();
				pwInput.closeInput();
				shoutmsgbox.buttonCancel_clickHandler(null);
				friendslist.CloseButton(null);
			}

		]]>
	</fx:Script>
	<s:states>
		<s:State name="lobby"/>
		<s:State name="room"/>
	</s:states>
	<fx:Style>
		@namespace d "http://ns.adobe.com/fxg/2008/dt";
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace th "http://ns.adobe.com/thermo/2009";
		@namespace mx "library://ns.adobe.com/flex/halo";
		@namespace message "message.*";
		@namespace components "components.*";
		@namespace poker "poker.*";
		mx|ToolTip{
			fontSize: 14;
		}
	</fx:Style>
	<fx:Declarations>
		<!--<fx:String id="mk" source="Introduce.xml"/>-->
	</fx:Declarations>
	<fx:DesignLayer d:userLabel="bgp">
		<s:BitmapImage source="@Embed('/assets/Bg_DT.png')" resizeMode="scale" d:userLabel="BgP"/>
		<mx:Image source="@Embed('assets/lobbyPanel.swf')"/>
		<s:Button skinClass="components.Button_toLobbyface" id="btn2lobby" x="492" y="4" click="tolobby_clickHandler(event)" includeIn="room"/>
		<s:Button includeIn="room" x="651" y="4" id="btn2LastTable" skinClass="components.Button_toLastTable" enabled="false" click="btn2LastTable_clickHandler(event)"/>
		<s:Button skinClass="components.Button_toRoom" id="btn2room" x="492" y="4" enabled="false" click="toroom_clickHandler(event)" includeIn="lobby"/>
		<mx:Image x="357" y="35" source="@Embed('assets/text_gamelist.swf')" includeIn="lobby"/>
		<mx:Image x="268" y="36" source="@Embed('assets/text_gamelobby.swf')" includeIn="room"/>
		<mx:Label includeIn="room" x="373" y="38" text="-" color="#FFFFFF" fontFamily="黑体" fontWeight="bold" fontSize="16"/>
		<mx:Label includeIn="room" x="386" y="38" id="label_roomname" color="#FFFFFF" fontSize="16" fontFamily="黑体" width="93" text="{lobbypanel.roomname}"/>
		<components:CustomComponent3 x="500" y="35" id="functionpanel"/>
		<!--<mx:Image  x="160" y="20" id="imgAvatar" autoLoad="true"  scaleContent="true" maintainAspectRatio="true" width="53" height="52"/>-->
		<!--<mx:Label  x="211" y="37" id="textPlayname" height="17" width="69" fontWeight="bold" fontStyle="normal" textDecoration="none"/>-->
		<s:TextArea x="289" y="66" id="introduceText" width="474" height="476" editable="false" baseColor="#f6edae" contentBackgroundAlpha="0.5"
					textFlow="{TextFlowUtil.importFromString(ruleIntroduce.ruleText)}">
		</s:TextArea>
	</fx:DesignLayer>
	<s:Scroller x="17" y="89" width="480" height="461" baseColor="#f6edae" id="roomScroller" verticalScrollPolicy="off" horizontalScrollPolicy="off">
		<s:Group x="17" y="89" width="480" height="461" id="gameRoomCanvas" creationComplete="gameRoomCanvas_creationCompleteHandler(event)"/>
	</s:Scroller>
	<!--<mx:Canvas x="17" y="89" width="480" height="461" id="gameRoomCanvas" baseColor="#f6edae" creationComplete="gameRoomCanvas_creationCompleteHandler(event)"/>-->
	<components:lobbyroomTagbtn id="lobbyroomtag" x="15" y="68" visible="false"/>
	<fx:DesignLayer d:userLabel="game lest">
		<components:GameLbby x="10" y="65" id="lobbypanel">
		<mx:Tree x="14" y="66" width="241" height="405" id="gameTreeView" labelField="@name" dataProvider="{LobyManager.Instance.TreeData}" doubleClickEnabled="true" itemDoubleClick="{LobyManager.Instance.LobyTreeItemClick(event)}" folderOpenIcon="@Embed(source='../res/treeroomiconOpen.png')" folderClosedIcon="@Embed(source='../res/treeroomiconClose.png')" defaultLeafIcon="@Embed(source='../res/treeroomiconNode.png')" backgroundAlpha="0" contentBackgroundAlpha="0"
			alternatingItemColors="[#11241A, #11241A]" baseColor="#f6edae" color="#000000" selectionColor="#F3AC02"/>
		</components:GameLbby>
	</fx:DesignLayer>
	<fx:DesignLayer d:userLabel="massage" th:visible.Page2="false">
		<!--商店界面同时也是道具界面-->
		<components:Shop x="200" y="130" id="shopmenu">
		</components:Shop>
		<!--玩家信息-->
		<components:PlayerInfo x="200" y="130" id="playerinfo"/>
		<components:OptionWindow x="200" y="130" id="createTable" visible="false"/>
		<components:passwordInput id="pwInput" x="188" y="230" visible="false"/>
	</fx:DesignLayer>
	<mx:Label x="140" y="26" text="ver 1.8.5.M" width="64" textAlign="right" color="#333333"/>
	<!--游戏本体-->
	<poker:poker id="gamePoker" visible="false"/>
	<!--用来确认一些需要使用卡片的道具-->
	<components:shoutMsgInputBox id="shoutmsgbox" x="250" y="200" visible="false"/>
	<!--好友列表，大厅和游戏共用同一个-->
	<components:friends id="friendslist" x="200" y="130" visible="false"/>
	<!--邀请，该窗口会位于所有的窗口之上，以保证会被最优先处理-->
	<components:Invitation x="200" y="130" id="invitation" visible="false"/>
	<!--公告显示的位置，处在画面的最上层-->
	<message:announceWnd id="lobbyAnnounce" x="50" y="36" visible="false"/>
</s:Application>
