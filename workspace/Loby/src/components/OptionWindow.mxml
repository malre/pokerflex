<?xml version="1.0" encoding="utf-8"?>
<s:Group
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:d="http://ns.adobe.com/fxg/2008/dt" 
	xmlns:th="http://ns.adobe.com/thermo/2009" 
	xmlns:components="components.*" xmlns:mx="library://ns.adobe.com/flex/halo"
	creationComplete="createroom_creationCompleteHandler(event)"
	>
	<fx:Script>
		<![CDATA[
			import lobystate.StateCreateTable;
			import lobystate.StateUpdateRoomInfo;
			
			import mx.events.FlexEvent;
			
			import poker.LevelDefine;
			
			import soundcontrol.SoundManager;
			
			// 金币的倍数的设定
			[Bindable]
			public var goldplusrate:Array = ["1","2","3","4","6","8","10"];
			[Bindable]
			private var curLobbygoldrate:Array;
			
			protected function closeButton_click():void
			{
				currentState='State1';
				this.visible = false;
				LobyManager.Instance.windowMutex = false;
			}

			protected function createroom_creationCompleteHandler(event:FlexEvent):void
			{
				x = (this.parent.width - 360)/2;
				y = (this.parent.height - 320)/2;
				currentState='State2';
			}
			
			public function setLobbyGoldrate():void
			{
				var rate:int = StateUpdateRoomInfo.Instance.getCurLobbyGoldRate();
				var endindex:int = int.MAX_VALUE;
				for(var i:int=0;i<goldplusrate.length;i++)
				{
					if(rate <= int(goldplusrate[i]))
					{
						endindex = i+1;
						break;
					}
				}
				curLobbygoldrate = goldplusrate.slice(0, endindex);
			}

			protected function checkboxPassword_clickHandler(event:MouseEvent):void
			{
				if(CheckBox(event.currentTarget).selected){
					inputboxPassword.enabled = true;
				}else{
					inputboxPassword.enabled = false;
				}
			}


			protected function checkboxAllowGold_clickHandler(event:MouseEvent):void
			{
				if(CheckBox(event.currentTarget).selected){
					goldplus.enabled = true;
				}else{
					goldplus.enabled = false;
				}
			}


			protected function BtnCancel_clickHandler(event:MouseEvent):void
			{
				closeButton_click();
			}


			protected function BtnConfirm_clickHandler(event:MouseEvent):void
			{
				if(currentState == "State2")
				{
					if(validityCheck()){
						labelErrormsg.visible = false;
						// 发送http请求
						// 等级的0代表，等级不限
						StateCreateTable.Instance.setOption(inputboxPassword.text, checkboxPassword.selected, 
							lowlevel.selectedIndex, highlevel.selectedIndex,
							int(goldplusrate[goldplus.selectedIndex]),checkboxAllowGold.selected,
							checkboxAllowChat.selected);
						LobyNetManager.Instance.send(LobyNetManager.createTable);
						closeButton_click();
						// set SE
						SoundManager.Instance().SEEnable = checkboxSEEnable.selected;
					}else {
						labelErrormsg.text = "等级范围输入有误，请重新输入！";
						labelErrormsg.visible = true;
					}
				}else if(currentState == "State3")	{
					// set SE
					SoundManager.Instance().SEEnable = checkboxSEEnable.selected;
					closeButton_click();
				}
			}
			
			// 验证数据的合理性
			protected function validityCheck():Boolean
			{
				if(lowlevel.selectedIndex == 0 || highlevel.selectedIndex == 0)
					return true;
				else if(lowlevel.selectedIndex > highlevel.selectedIndex)
					return false;
				
				return true;
			}

			protected function option_showHandler(event:FlexEvent):void
			{
//				if(LobyManager.Instance.windowMutex)
//					visible = false;
			}
			
			public function closeOption():void
			{
				closeButton_click();
			}

			protected function state2_enterStateHandler(event:FlexEvent):void
			{
				checkboxSEEnable.selected = SoundManager.Instance().SEEnable;
				labelErrormsg.visible = false;
			}


			protected function state3_enterStateHandler(event:FlexEvent):void
			{
				labelErrormsg.visible = false;
			}
			
			public function inGameSetting(obj:Object):void
			{
				if(currentState != "State3")
					currentState = "State3";
				// 对所有的选项进行设置
				if(obj.hasOwnProperty("password")) {
					checkboxPassword.selected = true;
					inputboxPassword.text = "********";
				}else{
					checkboxPassword.selected = false;
				}
				checkboxPassword.enabled = false;
				inputboxPassword.enabled = false;
				
				if(obj.hasOwnProperty("lowerlevellimit")) {
					lowlevel.selectedIndex = obj.lowerlevellimit;
				}else{
					lowlevel.selectedIndex = 0;
				}
				lowlevel.enabled = false;
				
				if(obj.hasOwnProperty("upperlevellimit")) {
					highlevel.selectedIndex = obj.upperlevellimit;
				}else{
					highlevel.selectedIndex = 0;
				}
				highlevel.enabled = false;
				
				if(obj.hasOwnProperty("magnification")) {
					checkboxAllowGold.selected = true;
					for(var m:int=0;m<goldplusrate.length;m++)
					{
						if(goldplusrate[m] == obj.magnification){
							goldplus.selectedIndex = m;
							break;
						}
					}
				}else{
					checkboxAllowGold.selected = false;
					goldplus.selectedIndex = 0;
				}
				checkboxAllowGold.enabled = false;
				goldplus.enabled = false;
				
				if(obj.hasOwnProperty("allowchat")) {
					checkboxAllowChat.selected = obj.allowchat;
				}else{
					checkboxAllowChat.selected = false;
				}
				checkboxAllowChat.enabled = false;
				
				// SE
				// load from soundmanger
				checkboxSEEnable.selected = SoundManager.Instance().SEEnable;
				
			}

		]]>

	</fx:Script>
	<s:transitions>
		<s:Transition fromState="State1" toState="State2" autoReverse="true">
			<s:Parallel>
				<s:Parallel target="{button1}">
					<s:Fade duration="100"/>
				</s:Parallel>
				<s:Parallel target="{image1}">
					<s:Fade duration="100"/>
				</s:Parallel>
				<s:Parallel target="{image2}">
					<s:Fade duration="100"/>
				</s:Parallel>
				<s:Parallel target="{BtnConfirm}">
					<s:Fade duration="100"/>
				</s:Parallel>
				<s:Parallel target="{BtnCancel}">
					<s:Fade duration="100"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="State2" toState="State1" autoReverse="true">
			<s:Parallel>
				<s:Parallel target="{button1}">
					<s:Fade duration="50"/>
				</s:Parallel>
				<s:Parallel target="{image1}">
					<s:Fade duration="100"/>
				</s:Parallel>
				<s:Parallel target="{image2}">
					<s:Fade duration="100"/>
				</s:Parallel>
				<s:Parallel target="{BtnConfirm}">
					<s:Fade duration="50"/>
				</s:Parallel>
				<s:Parallel target="{BtnCancel}">
					<s:Fade duration="50"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
	</s:transitions>
	<s:states>
		<s:State name="State1"/>
		<s:State name="State2" enterState="state2_enterStateHandler(event)"/>
		<s:State name="State3" enterState="state3_enterStateHandler(event)"/>
	</s:states>
	<mx:Image includeIn="State2,State3" source="@Embed('/assets/Bg_shop.swf')" id="image1"/>
	<mx:Image includeIn="State2" source="@Embed('/assets/text_createroom.swf')"/>
	<mx:Image includeIn="State3" source="@Embed('/assets/text_optionWnd.swf')"/>
	<mx:Image includeIn="State2,State3" source="@Embed('/assets/optionWindow_text.swf')" id="image2" x="39" y="46"/>
	<s:Button includeIn="State2,State3" x="330" y="11" skinClass="components.OptionWindow_CloseButton" id="button1" click="closeButton_click()"/>
	<s:Button skinClass="components.Button_confirm" includeIn="State2,State3" id="BtnConfirm" click="BtnConfirm_clickHandler(event)" x="62" y="237" x.State3="131" y.State3="237" x.State2="62" y.State2="231"/>
	<s:Button x="193" y="231" skinClass="components.Button_ShopNoBuy" id="BtnCancel" includeIn="State2" click="BtnCancel_clickHandler(event)"/>
	<mx:ComboBox includeIn="State2,State3" x="145" y="82" dataProvider="{LevelDefine.levelName}" editable="false" width="80" id="lowlevel" width.State2="60"/>
	<mx:ComboBox includeIn="State2,State3" x="252" y="82" dataProvider="{LevelDefine.levelName}" editable="false" width="80" id="highlevel" x.State2="236" y.State2="82" width.State2="60"/>
	<s:CheckBox includeIn="State2,State3" x="146" y="115" id="checkboxAllowGold" click="checkboxAllowGold_clickHandler(event)" selected="true"/>
	<s:CheckBox includeIn="State2,State3" x="146" y="54" selected="false" id="checkboxPassword" click="checkboxPassword_clickHandler(event)"/>
	<s:TextInput includeIn="State2,State3" x="178" y="50" width="126" displayAsPassword="true" maxChars="8" enabled="false" id="inputboxPassword"/>
	<mx:Label includeIn="State2,State3" x="226" y="79" text="－" color="#FFFFFF" fontSize="20" fontWeight="normal" x.State2="208" y.State2="79"/>
	<mx:ComboBox includeIn="State2,State3" x="285" y="113" dataProvider.State2="{curLobbygoldrate}" dataProvider.State3="{goldplusrate}" editable="false" width="50" id="goldplus"/>
	<s:CheckBox includeIn="State2,State3" x="146" y="147" id="checkboxAllowChat" selected="true"/>
	<s:CheckBox includeIn="State2,State3" x="146" y="178" id="checkboxSEEnable" selected="true"/>
	<mx:ComboBox includeIn="State2,State3" x="144" y="206" editable="true" enabled="false" id="inputboxSE" visible="false"/>
	<mx:Label includeIn="State2,State3" x="178" y="147" text="等级范围输入有误，请重新输入！" color="#FF0012" fontSize="14" fontWeight="bold" id="labelErrormsg" visible="true" width="139" height="51" x.State2="57" y.State2="204" width.State2="247" height.State2="25"/>
</s:Group>