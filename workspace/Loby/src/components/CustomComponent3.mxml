<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:th="http://ns.adobe.com/thermo/2009"
	xmlns:mx="library://ns.adobe.com/flex/halo"
	xmlns:components="components.*" 
	currentState="State2" 
	creationComplete="group1_creationCompleteHandler(event)" xmlns:message="message.*">
	<fx:Style>
		.datagridheader{
			color: #000000;
			fontsize: 12;
		}
	</fx:Style>
	<mx:Image includeIn="State3" id="bitmapimage1" creationComplete="panelBG_creationCompleteHandler(event)"/>
	<s:Button includeIn="State3" x="228" skinClass="components.Button_changeSkin" y="10" click="btnChangeSkin_clickHandler(event)" toolTip="切换皮肤" creationComplete="btnChangeSkin_creationCompleteHandler(event)"/>
	<s:Button includeIn="State3" x="208" y="492" click="btnEmotion_clickHandler(event)" toolTip="表情" creationComplete="btnMsgEmotion_creationCompleteHandler(event)"/>
	<s:Button includeIn="State3" x="208" y="492" skinClass="components.ButtonMsgToAll" click="shoutbtn_clickHandler(event)" toolTip="喊话" enabled="false" visible="false"/>
	<s:Button includeIn="State3" x="232" y="492" click="option_clickHandler(event)" toolTip="聊天设置" creationComplete="btnMsgOption_creationCompleteHandler(event)"/>
	<s:Button includeIn="State3" x="178" y="493" click="lobbySendMsg(event)" toolTip="发送聊天对话" creationComplete="btnSendMsg_creationCompleteHandler(event)"/>
	<mx:DataGrid id="lobbyplayerlist" includeIn="State3" x="13" y="41" width="243" editable="false" height="167" baseColor="#f6edae" alternatingItemColors="[#114734, #083025]" contentBackgroundAlpha="0" backgroundAlpha="0"
		dataProvider="{StateGetRoomPlayerlist.Instance.roomlist}" dragEnabled="false" creationComplete="lobbyplayerlist_creationCompleteHandler(event)"
		headerStyleName="datagridheader" dragMoveEnabled="false" draggableColumns="false" horizontalGridLines="false" verticalGridLines="false">
		<mx:columns>
			<mx:DataGridColumn headerText="昵称" dataField="name"/>
			<mx:DataGridColumn headerText="金币数" dataField="money"/>
			<mx:DataGridColumn headerText="级别" dataField="level"/>
			<mx:DataGridColumn headerText="积分" dataField="score"/>
		</mx:columns>
	</mx:DataGrid>
	
	<s:Button click="Buttonitem_click()" toolTip="道具箱" x="80" y="221" includeIn="State3" creationComplete="btnItem_creationCompleteHandler(event)"/>
	<s:Button x="43" y="221" click="Buttonvita_click()" toolTip="个人信息" includeIn="State3" creationComplete="btnPlayerInfo_creationCompleteHandler(event)"/>
	<s:Button click="Buttonfriend_click()" toolTip="好友" x="115" y="220" includeIn="State3" creationComplete="btnFriends_creationCompleteHandler(event)"/>
	<s:Button x="153" y="221" click="Buttonshop_click()" includeIn="State3" toolTip="商店" creationComplete="btnShop_creationCompleteHandler(event)"/>
	<s:Button label="自动加入" id="BtnAutojoinTable" click="BtnAutojoinTable_clickHandler(event)" x="189" y="220" includeIn="State3" toolTip="自动加入房间" creationComplete="BtnAutojoinTable_creationCompleteHandler(event)"/>
	<s:Button x="226" y="221" label="创建房间" id="BtnCreateTable" click="BtnCreateTable_clickHandler(event)" enabled="false" includeIn="State3" toolTip="创建房间" creationComplete="BtnCreateTable_creationCompleteHandler(event)"/>
	
	<s:TextArea x="13" y="265" id="lobbychatbox" includeIn="State3" width="243" height="224" color="#FFFFFF" baseColor="#f6edae" editable="false" creationComplete="lobbychatbox_creationCompleteHandler(event)" contentBackgroundAlpha="0" borderAlpha="0"/>
	<s:TextArea x="12" y="494" id="lobbyinputbox" includeIn="State3" width="167" height="17" color="#FFFFFF" baseColor="#f6edae" editable="true" keyDown="lobbyinputbox_keyDownHandler(event)" creationComplete="lobbyinputbox_creationCompleteHandler(event)" contentBackgroundAlpha="0" borderAlpha="0" maxChars="60" focusEnabled="false"/>	
	<!--</s:Group>-->	
	<message:chatSetting x="99" y="456" id="lobbychatsetting" visible="false" includeIn="State3"/>
	<message:chatEmotion id="lobbyEmotion" includeIn="State3" x="109" y="338" visible="false">
	</message:chatEmotion>
	<s:transitions>
		<s:Transition fromState="State2" toState="State3" autoReverse="true">
			<s:Parallel>
				<s:Parallel target="{bitmapimage1}">
					<s:Fade duration="0"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="State3" toState="State2" autoReverse="true">
			<s:Parallel>
				<s:Parallel target="{bitmapimage1}">
					<s:Fade duration="0"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
	</s:transitions>
	<s:states>
		<s:State name="State2" th:color="0x0081cc" enterState="state2_enterStateHandler(event)"/>
		<s:State name="State3" enterState="state3_enterStateHandler(event)"/>
	</s:states>
	<fx:Script>
		<![CDATA[
			import components.skin2.*;
			import components.skin3.*;
			
			import item.shopRequester;
			
			import lobystate.StateGetFriends;
			import lobystate.StateGetPlayerInfo;
			import lobystate.StateGetRoomPlayerlist;
			import lobystate.StateGetSkin;
			
			import message.*;
			
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;

			protected function Buttonitem_click():void
			{
				if(!LobyManager.Instance.windowMutex){
					// 等用户未登录的情况下，这些选项都无效
					if(StateGetPlayerInfo.Instance.lastSuccData.hasOwnProperty("success"))
					{
						if(StateGetPlayerInfo.Instance.lastSuccData.success)
						{
							// 首先请求是否有从其他玩家处得到的道具
							LobyNetManager.Instance.send(LobyNetManager.checkgift);
							
//							FlexGlobals.topLevelApplication.shopmenu.visible = true;
//							FlexGlobals.topLevelApplication.shopmenu.currentState="StateItemMain";
//							// 进行一次道具列表的请求, 该次请求是初始请求，范围在0-12内
//							playerItemsRequester.Instance().setRequest(0, 13);
//							playerItemsRequester.Instance().send();
							//
							LobyManager.Instance.windowMutex = true;
						}
					}
				}
			}
			
			protected function Buttonvita_click():void
			{
				if(!LobyManager.Instance.windowMutex){
					// 等用户未登录的情况下，这些选项都无效
					if(StateGetPlayerInfo.Instance.lastFlag)
					{
						StateGetPlayerInfo.Instance.setType(1);
						LobyNetManager.Instance.send(LobyNetManager.playerInfo);
						LobyManager.Instance.windowMutex = true;
					}
				}
			}
			
			protected function Buttonfriend_click():void
			{
				if(!LobyManager.Instance.windowMutex){
					// 等用户未登录的情况下，这些选项都无效
					if(StateGetPlayerInfo.Instance.lastFlag)
					{
						FlexGlobals.topLevelApplication.friendslist.visible = true;
						FlexGlobals.topLevelApplication.friendslist.toState(1);
						LobyManager.Instance.windowMutex = true;
						StateGetFriends.Instance.settype(0);
						LobyNetManager.Instance.send(LobyNetManager.getFriends);
					}
				}
			}
			
			protected function Buttonshop_click():void
			{
				if(!LobyManager.Instance.windowMutex){
					// 等用户未登录的情况下，这些选项都无效
					if(StateGetPlayerInfo.Instance.lastFlag)
					{
						FlexGlobals.topLevelApplication.shopmenu.visible = true;
						FlexGlobals.topLevelApplication.shopmenu.currentState="StateShopMain";
						// 进行一次道具列表的请求, 该次请求是初始请求，范围在0-12内
						shopRequester.Instance().setRequest(0, 13);
						shopRequester.Instance().send();
						LobyManager.Instance.windowMutex = true;
					}
				}
			}
			
			protected function BtnAutojoinTable_clickHandler(event:MouseEvent):void
			{
				if(!LobyManager.Instance.windowMutex){
					LobyNetManager.Instance.send(LobyNetManager.autoaddlobby);
				}
			}
			
			protected function BtnCreateTable_clickHandler(event:MouseEvent):void
			{
				if(!LobyManager.Instance.windowMutex){
//					FlexGlobals.topLevelApplication.createTable.visible = true;
//					FlexGlobals.topLevelApplication.createTable.setLobbyGoldrate();
//					FlexGlobals.topLevelApplication.createTable.currentState = "State2";
					LobyNetManager.Instance.send(LobyNetManager.checkitemnum);
					LobyManager.Instance.windowMutex = true;
				}
			}
			
			
			protected function option_clickHandler(event:MouseEvent):void
			{
				lobbychatsetting.visible = !lobbychatsetting.visible;
			}
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				// 当窗口创建完�E皁E���
				// 创建对话用皁E���E系统，并封E��E��绑定到主显示窗口�
				Messenger.Instance;	// net part
			}

			protected function state3_enterStateHandler(event:FlexEvent):void
			{
				Messenger.Instance.stopGame();
				Messenger.Instance.startLobby();
//				emotion.setType(0);
//				ui1.visible = true;
			}
			
			protected function state2_enterStateHandler(event:FlexEvent):void
			{
				if(lobbyEmotion)
				{
					lobbyEmotion.visible = false;
				}
//				ui1.visible = false;
			}
			
			protected function btnEmotion_clickHandler(event:MouseEvent):void
			{
				lobbyEmotion.visible = !lobbyEmotion.visible;
			}
			

			protected function lobbySendMsg(event:MouseEvent):void
			{
				Messenger.Instance.sendButtonPressed(lobbyinputbox);
			}

			// 发送喊话按钮
			protected function shoutbtn_clickHandler(event:MouseEvent):void
			{
				if(!LobyManager.Instance.windowMutex){
					FlexGlobals.topLevelApplication.shoutmsgbox.visible = true;
					LobyManager.Instance.windowMutex = true;
				}
			}
			

			protected function lobbychatbox_creationCompleteHandler(event:FlexEvent):void
			{
				var skin:int = StateGetSkin.Instance.skin;
				if(skin == 0){
				}
				else if(skin == 1){
					lobbychatbox.x -= 2;
					lobbychatbox.y -= 1;
				}
				else if(skin == 2){
				}
			}
			protected function lobbyinputbox_creationCompleteHandler(event:FlexEvent):void
			{
				var skin:int = StateGetSkin.Instance.skin;
				if(skin == 0){
				}
				else if(skin == 1){
					lobbyinputbox.x -= 2;
					lobbyinputbox.y -= 2;
					lobbyinputbox.setStyle("color", "#000000");
					lobbyinputbox.textFlow.color = 0x0;
				}
				else if(skin == 2){
				}
			}


			protected function lobbyinputbox_keyDownHandler(event:KeyboardEvent):void
			{
				if(event.keyCode == Keyboard.NUMPAD_ENTER || event.keyCode == Keyboard.ENTER)
				{
					Messenger.Instance.sendButtonPressed(lobbyinputbox);
					return;
				}
				super.keyDownHandler(event);
			}


			protected function btnChangeSkin_clickHandler(event:MouseEvent):void
			{
				if(!LobyManager.Instance.windowMutex){
					// 等用户未登录的情况下，这些选项都无效
					if(StateGetPlayerInfo.Instance.lastFlag)
					{
						FlexGlobals.topLevelApplication.changeSkin.visible = true;
						FlexGlobals.topLevelApplication.changeSkin.currentState = "StateMain";
						FlexGlobals.topLevelApplication.changeSkin.skinClick(StateGetSkin.Instance.skin);
						LobyManager.Instance.windowMutex = true;
					}
				}
			}


			protected function panelBG_creationCompleteHandler(event:FlexEvent):void
			{
				var skin:int = StateGetSkin.Instance.skin;
				if(skin == 0){
					bitmapimage1.source = ResourceManagerLobby.Instance.bg_5_skin1; 
				}
				else if(skin == 1){
					bitmapimage1.source = ResourceManagerLobby.Instance.bg_5_skin2;
					lobbyplayerlist.x -= 2;
					lobbyplayerlist.y -= 4;
				}
				else if(skin == 2){
					bitmapimage1.source = ResourceManagerLobby.Instance.bg_5_skin3; 
				}
			}


			protected function btnChangeSkin_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
			}


			protected function btnMsgEmotion_creationCompleteHandler(event:FlexEvent):void
			{
				var btn:Button = (event.currentTarget) as Button;
				var skin:int = StateGetSkin.Instance.skin;
				if(skin == 0){
					btn.setStyle("skinClass", components.ButtonMsgEmotion); 
				}
				else if(skin == 1){
					btn.setStyle("skinClass", ButtonMsgEmotion2); 
					btn.x = 207;
					btn.y = 489;
				}
				else if(skin == 2){
					btn.setStyle("skinClass", ButtonMsgEmotion3); 
				}
			}


			protected function btnMsgOption_creationCompleteHandler(event:FlexEvent):void
			{
				var btn:Button = (event.currentTarget) as Button;
				var skin:int = StateGetSkin.Instance.skin;
				if(skin == 0){
					btn.setStyle("skinClass", components.ButtonMsgOption);
				}
				else if(skin == 1){
					btn.setStyle("skinClass", ButtonMsgOption2);
					btn.x = 232;
					btn.y = 489;
				}
				else if(skin == 2){
					btn.setStyle("skinClass", ButtonMsgOption3);
				}
			}


			protected function btnItem_creationCompleteHandler(event:FlexEvent):void
			{
				var btn:Button = (event.currentTarget) as Button;
				var skin:int = StateGetSkin.Instance.skin;
				if(skin == 0){
					btn.setStyle("skinClass", components.Button_Item);
				}
				else if(skin == 1){
					btn.setStyle("skinClass", Button_Item2);
				}
				else if(skin == 2){
					btn.setStyle("skinClass", Button_Item3);
				}
			}


			protected function btnPlayerInfo_creationCompleteHandler(event:FlexEvent):void
			{
				var btn:Button = (event.currentTarget) as Button;
				var skin:int = StateGetSkin.Instance.skin;
				if(skin == 0){
					btn.setStyle("skinClass", components.Button_Vita);
				}
				else if(skin == 1){
					btn.setStyle("skinClass", Button_Vita2);
				}
				else if(skin == 2){
					btn.setStyle("skinClass", Button_Vita3);
				}
			}


			protected function btnFriends_creationCompleteHandler(event:FlexEvent):void
			{
				var btn:Button = (event.currentTarget) as Button;
				var skin:int = StateGetSkin.Instance.skin;
				if(skin == 0){
					btn.setStyle("skinClass", components.Button_Friends);
				}
				else if(skin == 1){
					btn.setStyle("skinClass", Button_Friends2);
				}
				else if(skin == 2){
					btn.setStyle("skinClass", Button_Friends3);
				}
			}


			protected function btnShop_creationCompleteHandler(event:FlexEvent):void
			{
				var btn:Button = (event.currentTarget) as Button;
				var skin:int = StateGetSkin.Instance.skin;
				if(skin == 0){
					btn.setStyle("skinClass", components.Button_Shop);
				}
				else if(skin == 1){
					btn.setStyle("skinClass", Button_Shop2);
				}
				else if(skin == 2){
					btn.setStyle("skinClass", Button_Shop3);
				}
			}


			protected function BtnAutojoinTable_creationCompleteHandler(event:FlexEvent):void
			{
				var btn:Button = (event.currentTarget) as Button;
				var skin:int = StateGetSkin.Instance.skin;
				if(skin == 0){
					btn.setStyle("skinClass", components.Button_AutoJoinTable);
				}
				else if(skin == 1){
					btn.setStyle("skinClass", Button_AutoJoinTable2);
				}
				else if(skin == 2){
					btn.setStyle("skinClass", Button_AutoJoinTable3);
				}
			}


			protected function BtnCreateTable_creationCompleteHandler(event:FlexEvent):void
			{
				var btn:Button = (event.currentTarget) as Button;
				var skin:int = StateGetSkin.Instance.skin;
				if(skin == 0){
					btn.setStyle("skinClass", components.Button_CreateTable);
				}
				else if(skin == 1){
					btn.setStyle("skinClass", Button_CreateTable2);
				}
				else if(skin == 2){
					btn.setStyle("skinClass", Button_CreateTable3);
				}
			}


			protected function btnSendMsg_creationCompleteHandler(event:FlexEvent):void
			{
				var btn:Button = (event.currentTarget) as Button;
				var skin:int = StateGetSkin.Instance.skin;
				if(skin == 0){
					btn.setStyle("skinClass", components.Button_GameTalk);
				}
				else if(skin == 1){
					btn.setStyle("skinClass", Button_GameTalk2);
					btn.x -= 1;
					btn.y -= 3;
				}
				else if(skin == 2){
					btn.setStyle("skinClass", Button_GameTalk3);
				}
			}


			protected function lobbyplayerlist_creationCompleteHandler(event:FlexEvent):void
			{
				var skin:int = StateGetSkin.Instance.skin;
				if(skin == 0){
				}
				else if(skin == 1){
				}
				else if(skin == 2){
				}
			}

		]]>
	</fx:Script>
</s:Group>