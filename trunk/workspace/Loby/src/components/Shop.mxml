<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:th="http://ns.adobe.com/thermo/2009" 
	xmlns:components="components.*"
	currentState="StateShopStart" 
	creationComplete="shop_creationCompleteHandler(event)"
	currentStateChange="shop_currentStateChangeHandler(event)"
	xmlns:mx="library://ns.adobe.com/flex/halo">
	<s:transitions>
		<s:Transition fromState="StateShopStart" toState="StateShopMain" autoReverse="true">
			<s:Parallel>
				<s:Parallel target="{bitmapimage1}">
					<s:Fade duration="200"/>
				</s:Parallel>
				<s:Parallel target="{bitmapimage2}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{button1}">
					<s:Fade duration="0"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="StateShopStart" toState="StateItemMain" autoReverse="true">
			<s:Parallel>
				<s:Parallel target="{bitmapimage1}">
					<s:Fade duration="200"/>
				</s:Parallel>
				<s:Parallel target="{bitmapimage2_2}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{button1}">
					<s:Fade duration="0"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="StateShopMain" toState="StateShopStart" autoReverse="true">
			<s:Parallel>
				<s:Parallel target="{bitmapimage2}">
					<s:Fade duration="0"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="StateItemMain" toState="StateShopStart" autoReverse="true">
			<s:Parallel>
				<s:Parallel target="{bitmapimage2_2}">
					<s:Fade duration="0"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="StateShopSub" toState="StateShopMain" autoReverse="true">
			<s:Parallel>
				<s:Parallel target="{bitmapimage6}">
					<s:Fade duration="200"/>
				</s:Parallel>
				<s:Parallel target="{button8}">
					<s:Fade duration="100"/>
				</s:Parallel>
				<s:Parallel target="{button9}">
					<s:Fade duration="100"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="StateShopMain" toState="StateShopSub" autoReverse="true">
			<s:Parallel>
				<s:Parallel target="{bitmapimage6}">
					<s:Fade duration="100"/>
				</s:Parallel>
				<s:Parallel target="{button8}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{button9}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{Imgbuyitem}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{itemDescribe}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{itemPrice}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{itemName}">
					<s:Fade duration="0"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
	</s:transitions>
	<fx:Script>
		<![CDATA[
			import item.itembuyRequest;
			import item.itemuseRequest;
			import item.playerItemsRequester;
			import item.shopRequester;
			
			import mx.controls.Image;
			import mx.controls.ToolTip;
			import mx.events.FlexEvent;
			import mx.events.StateChangeEvent;
			import mx.events.ToolTipEvent;
			include "../ServerAddress.ini"
			
			private var currentSelectedItemId:int = -1;
			
			protected function CloseButton():void
			{
				currentState='StateShopStart';
				LobyManager.Instance.windowMutex = false;
			}

			protected function Button_click_1():void
			{
				currentState='StateShopSub';
			}

			public function BtnItemNotBuy():void
			{
				if(currentState == "StateShopSub")
				{
					currentState='StateShopMain';
					//
					itembuyNumber.text = "1";
				}
				else if(currentState == "StateItemSub")
				{
					currentState='StateItemMain';
				}
			}

			protected function ItemUseClick():void
			{
				itemuseRequest.Instance().setItemUse(playerItemsRequester.Instance().lastSuccObj.items[currentSelectedItemId].piid);
				itemuseRequest.Instance().send();
			}
			
			protected function BtnItemBuy():void
			{
				//
				itembuyRequest.Instance().setItemBuy(shopRequester.Instance().lastSuccObj.items[currentSelectedItemId].iid ,int(itembuyNumber.text));
				itembuyRequest.Instance().send();
			}

			protected function shop_creationCompleteHandler(event:FlexEvent):void
			{
				shopRequester.Instance().setmethod("POST");
				playerItemsRequester.Instance().setmethod("POST");
				itembuyRequest.Instance().setmethod("POST");
				itemuseRequest.Instance().setmethod("POST");
			}
			
			public function clearItem():void
			{
				for(var i:int=0;i<12;i++)
				{
					if(item_icon_group == null)
						return;
					var obj:Object = item_icon_group.getChildByName("item"+i.toString());
					if(obj != null)
					{
						var img:Image = Image(obj);
						img.visible = false;
						img.source = "";
					}
				}
			}
			public function drawItem(obj:Object):void
			{
				for(var i:int= 0;i<(obj.items.length>12?12:obj.items.length);i++)
				{
					var img:Image = Image(item_icon_group.getChildByName("item"+i.toString()));
					img.source = ServerAddress + ServerPerfix + webResourePerfix +obj.items[i].iid + ".png";//+ obj.items[i].image;
					img.toolTip = obj.items[i].name;
					img.addEventListener(ToolTipEvent.TOOL_TIP_CREATE, tooltipcreate);
					img.visible = true;
				}
			}
			private function tooltipcreate(event:ToolTipEvent):void
			{
				var tt:ToolTip = ToolTip(event.toolTip);
				
			}

			protected function itemClicked(event:MouseEvent):void
			{
				var name:String = event.currentTarget.id.substr(4);
				var itemobj:Object;
				if(currentState == "StateShopMain")
				{
					//
					currentState = "StateShopSub";
					// 当道具被点击，跳出道具的具体描述画面
					currentSelectedItemId = int(name);
					itemobj = shopRequester.Instance().lastSuccObj.items[currentSelectedItemId];
					itemDescribe.text = itemobj.description;
					itemPrice.text = itemobj.price+" 金币";
					itemName.text = itemobj.name;
					Imgbuyitem.source = event.currentTarget.source;// ServerAddress + ServerPerfix + webResourePerfix + itemobj.image;
				}
				else if(currentState == "StateItemMain")
				{
					currentState = "StateItemSub";
					// 当道具被点击，跳出道具的具体描述画面
					currentSelectedItemId = int(name);
					itemobj = playerItemsRequester.Instance().lastSuccObj.items[currentSelectedItemId];
					itemDescribe.text = itemobj.description;
					itemPrice.text = itemobj.price+" 金币";
					itemName.text = itemobj.name;
					Imgbuyitem.source = event.currentTarget.source;//ServerAddress + ServerPerfix + webResourePerfix + itemobj.image;
					itemnumber.text =  "数量："+itemobj.number.toString();
				}
			}

			protected function shop_currentStateChangeHandler(event:StateChangeEvent):void
			{
				if(event.currentTarget.currentState == "StateShopStart")
				{
					visible = false;
					clearItem();
				}
			}


			protected function pageleft_clickHandler(event:MouseEvent):void
			{
				if(currentState == "StateShopMain")
				{
					// 发送也请求
					// 从当前页数来判断，是否到了第一页
					shopRequester.Instance().setRequest(shopRequester.Instance().offset-12);
					shopRequester.Instance().send();
				}
				else if(currentState == "StateItemMain")
				{
					playerItemsRequester.Instance().setRequest(playerItemsRequester.Instance().offset-12);
					playerItemsRequester.Instance().send();
				}
			}


			protected function pageright_clickHandler(event:MouseEvent):void
			{
				if(currentState == "StateShopMain")
				{
					// 
					shopRequester.Instance().setRequest(shopRequester.Instance().offset+12);
					shopRequester.Instance().send();
				}
				else if(currentState == "StateItemMain")
				{
					playerItemsRequester.Instance().setRequest(playerItemsRequester.Instance().offset+12);
					playerItemsRequester.Instance().send();
				}
			}


			protected function itemnumright_clickHandler(event:MouseEvent):void
			{
				itembuyNumber.text = (int(itembuyNumber.text) + 1).toString();
				if(int(itembuyNumber.text) > 99)
					itembuyNumber.text = "99";
			}


			protected function itemnumleft_clickHandler(event:MouseEvent):void
			{
				itembuyNumber.text = (int(itembuyNumber.text) - 1).toString();
				if(int(itembuyNumber.text) < 1)
					itembuyNumber.text = "1";
			}
			
			// 控制消息窗口
			public function showMsgBox(type:int, str:String):void
			{
				msgbox.visible = true;
				if(type == 0)
					msgbox.currentState = "StateConfirm";
				else
					msgbox.currentState = "StateUse";
				msgbox.desc.text = str;
			}
		]]>

	</fx:Script>
	<s:states>
		<s:State name="StateShopMain"/>
		<s:State name="StateShopSub"/>
		<s:State name="StateShopStart"/>
		<s:State name="StateItemMain"/>
		<s:State name="StateItemSub"/>
	</s:states>
	<mx:Image source="@Embed('/assets/Bg_shop.swf')" includeIn="StateItemMain,StateItemSub,StateShopMain,StateShopSub" id="bitmapimage1"/>
	<s:BitmapImage source="@Embed('/assets/shop_text.png')" resizeMode="scale" x="13.1" y="2.1" id="bitmapimage2" includeIn="StateShopMain,StateShopSub"/>
	<s:BitmapImage source="@Embed('/assets/item_text.png')" resizeMode="scale" x="13.1" y="2.1" id="bitmapimage2_2" includeIn="StateItemMain,StateItemSub"/>
	<s:Button skinClass="components.OptionWindow_CloseButton" label="Button" x="330" y="11" click.StateShopMain="CloseButton()" id="button1" includeIn="StateItemMain,StateItemSub,StateShopMain,StateShopSub" click.StateItemMain="CloseButton()"/>
	<!--道具的图片-->
	<s:Group includeIn="StateItemMain,StateShopMain" id="item_icon_group" width="312" height="190" x="23" y="40">
		<mx:Image id="item0" name="item0" buttonMode="true" useHandCursor="true" click="itemClicked(event)" x="5" y="7"/>
		<mx:Image id="item1" name="item1" buttonMode="true" useHandCursor="true" click="itemClicked(event)" x="80" y="7"/>
		<mx:Image id="item2" name="item2" buttonMode="true" useHandCursor="true" click="itemClicked(event)" x="155" y="7"/>
		<mx:Image id="item3" name="item3" buttonMode="true" useHandCursor="true" click="itemClicked(event)" x="230" y="7"/>
		<mx:Image id="item4" name="item4" buttonMode="true" useHandCursor="true" click="itemClicked(event)" x="5" y="68"/>
		<mx:Image id="item5" name="item5" buttonMode="true" useHandCursor="true" click="itemClicked(event)" x="80" y="68"/>
		<mx:Image id="item6" name="item6" buttonMode="true" useHandCursor="true" click="itemClicked(event)" x="155" y="68"/>
		<mx:Image id="item7" name="item7" buttonMode="true" useHandCursor="true" click="itemClicked(event)" x="230" y="68"/>
		<mx:Image id="item8" name="item8" buttonMode="true" useHandCursor="true" click="itemClicked(event)" x="5" y="132"/>
		<mx:Image id="item9" name="item9" buttonMode="true" useHandCursor="true" click="itemClicked(event)" x="80" y="132"/>
		<mx:Image id="item10" name="item10" buttonMode="true" useHandCursor="true" click="itemClicked(event)" x="155" y="132"/>
		<mx:Image id="item11" name="item11" buttonMode="true" useHandCursor="true" click="itemClicked(event)" x="230" y="132"/>
	</s:Group>
	<s:Button includeIn="StateItemMain,StateShopMain" id="pageleft" skinClass="components.Button_Page" click="pageleft_clickHandler(event)" buttonMode="true" useHandCursor="true" toolTip="上一页" enabled="false" x="130" y="241"/>
	<s:Button includeIn="StateItemMain,StateShopMain" id="pageright" skinClass="components.Button_Page" rotation="180" click="pageright_clickHandler(event)" buttonMode="true" useHandCursor="true" toolTip="下一页" x="223" y="260"/>
	<mx:Label includeIn="StateItemMain,StateShopMain" id="pagenumber" text="1" width="32" fontSize="16" textAlign="center" fontWeight="bold" color="#000000" x="161" y="238"/>

	<s:BitmapImage source="@Embed('/assets/shop_Bg_2.png')" resizeMode="scale" includeIn="StateItemSub,StateShopSub" id="bitmapimage6" x="33" y="37"/>
	<mx:Image includeIn="StateItemSub,StateShopSub" id="Imgbuyitem" x="50" y="60"/>
	<s:Button includeIn="StateShopSub" x="66" y="227" skinClass="components.Button_ShopBuy" id="button8" click="BtnItemBuy()"/>
	<s:Button includeIn="StateShopSub,StateItemSub" skinClass="components.Button_ShopNoBuy" id="button9" click="BtnItemNotBuy()" x="194" y="227"/>
	<s:Button includeIn="StateItemSub" x="62" y="227" skinClass="components.Button_ItemUse" id="button10" click="ItemUseClick()"/>
	<s:RichText includeIn="StateItemSub,StateShopSub" color="#c4ab47" text="说明" fontSize="18" fontFamily="宋体" id="itemDescribe" width="159" height="92" x="154" y="54"/>
	<s:RichText includeIn="StateItemSub,StateShopSub" color="#000000" text="价格，使用限制" fontSize="18" fontFamily="宋体" id="itemPrice" width="157" height="60" x="154" y="157"/>
	<s:RichText includeIn="StateItemSub,StateShopSub" color="#000000" text="道具名" fontSize="18" fontFamily="宋体" id="itemName" width="93" height="51" x="45" y="126"/>
	<mx:Label includeIn="StateShopSub" x="80" y="185" text="1" fontWeight="bold" fontSize="16" id="itembuyNumber" textAlign="center" color="#000000"/>
	<s:Button includeIn="StateShopSub" id="itemnumleft" x="47" y="188" skinClass="components.Button_Page" click="itemnumleft_clickHandler(event)" buttonMode="true" useHandCursor="true"/>
	<s:Button includeIn="StateShopSub" id="itemnumright" x="134" y="206" skinClass="components.Button_Page" rotation="180" click="itemnumright_clickHandler(event)" buttonMode="true" useHandCursor="true"/>
	<mx:Label includeIn="StateItemSub" x="39" y="193" width="94" fontFamily="宋体" fontSize="18" id="itemnumber" textAlign="center" color="#000000"/>
	<components:MSGbox id="msgbox" x="44" y="58" visible="false"/>
	<fx:Private>
		<th:Guide y="281"/>
	</fx:Private>
</s:Group>